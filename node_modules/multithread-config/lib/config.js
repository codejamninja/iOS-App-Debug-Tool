"use strict";

Object.defineProperty(exports, "__esModule", {
  value: true
});
exports.setConfig = setConfig;
exports.getConfig = getConfig;
exports.isOwner = isOwner;
exports.isFree = isFree;
exports.stop = stop;
exports.default = exports.configs = void 0;

var _mergeConfiguration = _interopRequireDefault(require("merge-configuration"));

var _socket = _interopRequireDefault(require("./socket"));

var _state = _interopRequireDefault(require("./state"));

function _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }

const socket = new _socket.default();
const state = new _state.default();
const configs = {};
exports.configs = configs;

function setConfig(name, config) {
  const free = isFree(name);
  const owner = isOwner(name);

  if (!free && !owner) {
    throw new Error(`config '${name}' is not free and process is not the owner`);
  }

  if (owner || free) state.config = (0, _mergeConfiguration.default)(state.config, config);

  if (free) {
    socket.start();
    configs[name] = state.config;
  }

  return state.config;
}

function getConfig(name) {
  let config = null;

  if (configs[name]) {
    config = configs[name];
  } else {
    try {
      config = socket.getConfig(name);
    } catch (err) {}
  }

  return config;
}

function isOwner(name) {
  return !!configs[name];
}

function isFree(name) {
  return !getConfig(name);
}

function stop() {
  socket.stop();
}

var _default = state.config;
exports.default = _default;